import React from 'react';

const ShoeThumbnail = ({ primary }) => {
	const secondary = changeHue(primary, 300);
	const tertiary = changeHue(secondary, 20);

	return (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1700 1400">
			<ellipse cx="850" cy="1143.8434" rx="653" ry="23.700001" fill="#7a7a7a" />
			<path d="M1166.9 304.74348c-82.2-65.2-191.49999-84.3-257.89999-65.3-20.3 5.8-32.4 26.5-27.8 47.1l1.6 7.3c4.3-11.5 13.7-20.8 26.2-24.4 66.4-19 175.69999.1 257.89999 65.3 16.5 13.1 25.9 33.1 25.9 54.1v-30c0-21.1-9.4-41.1-25.9-54.1z" fill={secondary} />
			<path d="M1166.9 334.74348c-82.2-65.2-191.49999-84.3-257.89999-65.3-12.5 3.6-22 12.9-26.2 24.4l28.4 128.9c3.7 16.8 4.8 34 3.2 50.9-1.7 19-6.7 37.8-14.9 55.3l-25.1 53.9 12.2 3.7 225.19999 68.3 47.2-94.3c22.3-44.5 33.9-93.6 33.9-143.4v-28.3c-.1-21.1-9.5-41.1-26-54.1z" fill="#1f1f1f" />
			<path d="M1378.9 416.24348c-23.7 0-46.8-7.6-65.9-21.7l-79.5-58.7c-20.8-15.4-50.5-7.4-60.9 16.3l-39.5 90.2c-11.1 25.2-36 41.6-63.6 41.6h-16.3c-20.5 0-40 9.1-53.1 24.8l-57.19999 68.1 20 6.2 43.09999-51.3c13.2-15.7 32.6-24.8 53.1-24.8h16.3c27.6 0 52.5-16.3 63.6-41.6l39.5-90.2c10.4-23.7 40.1-31.6 60.9-16.3l79.5 58.7c19.1 14.1 42.2 21.7 65.9 21.7 4.5 0 8.6 1.6 11.8 4.1l.9-5.2c1.9-11.5-7-21.9-18.6-21.9z" fill={tertiary} />
			<path d="M1274.2 448.94348c-13.3-6-27.8-10.6-42.1-8.2-14.3 2.4-28.1 13.7-29.9 29-1.8 15.7 8.7 29.6 17.7 42.1 27.4 38.2 53 81.2 63.9 127.7l87-41.7 10.1-60.9c-28.2-31.6-76.7-74.7-106.7-88z" fill="#1f1f1f" />
			<path d="M1318.9 417.44348l-79.5-58.7c-20.8-15.4-50.5-7.4-60.9 16.3l-39.5 90.2c-11.1 25.2-36 41.6-63.6 41.6h-16.3c-20.5 0-40 9.1-53.1 24.8l-43.09999 51.3 265.99999 82.9 42.1-20.2c-13.4-46.5-35.5-90.5-64.9-129-11.7-15.3-25.3-32.1-22.9-51.2 2.3-18.6 20.2-32.3 38.7-35.2 18.5-2.9 37.3 2.8 54.5 10 41 17.2 78.2 43.6 108 76.6l12.3-73.6c-3.2-2.6-7.3-4.1-11.8-4.1-23.8 0-46.9-7.6-66-21.7z" fill="#1f1f1f" />
			<path d="M1276.4 440.24348c-17.3-7.2-36-12.9-54.5-10-18.5 2.9-36.4 16.7-38.7 35.2-2.4 19.1 11.2 36 22.9 51.2 29.4 38.4 51.5 82.5 64.9 129l12.9-6.2c-10.9-46.6-36.5-89.5-63.9-127.7-9-12.6-19.5-26.4-17.7-42.1 1.8-15.3 15.6-26.6 29.9-29 14.3-2.4 28.8 2.3 42.1 8.2 30 13.4 78.4 56.4 106.8 88.1l3.3-20c-29.8-33.1-67-59.5-108-76.7z" fill={tertiary} />
			<path d="M1366.1 607.14348l-74.2 31.7c-45.6 19.5-96.9 20.6-143.4 3.3l-155.69999-58.1c-34.8-13-73.8-6.9-103 16l-217.2 170.2c-51.2 40.1-110.3 69-173.5 84.8l-43.7 10.9c2.8 3.9 6.2 7.4 10.2 10.5l8.7 6.7c21.2 16.3 49.8 19.2 73.8 7.4l132.8-65.2c33.7-16.6 72-21.6 108.9-14.3l323.69999 63.9c42.6 8.4 86.8 3.6 126.6-13.7l93.2-40.6c27.6-12 42.7-42 35.8-71.3-4.5-19.1-2.6-39.1 5.2-57.1l24.8-57.1.8-12.8c-4.5-13.3-19.7-21.2-33.8-15.2z" fill="#1f1f1f" />
			<path d="M1366.1 577.94348l-74.2 31.7c-45.6 19.5-96.9 20.6-143.4 3.3l-155.69999-58.1c-34.8-13-73.8-6.9-103 16l-217.2 170.2c-51.2 40.1-110.3 69-173.5 84.8l-53.6 13.4c.7 9.7 4.1 19 9.9 26.8l43.7-10.9c63.1-15.8 122.2-44.7 173.5-84.8l217.3-170.3c29.2-22.9 68.2-28.9 103-16l155.69999 58.1c46.4 17.3 97.8 16.2 143.4-3.3l74.2-31.7c14.1-6 29.3 1.8 33.7 15.1l1.2-19.6c1.2-18.7-17.8-32.1-35-24.7z" fill={secondary} />
			<path d="M1457.5 886.24348c-5.5-43.7-20.6-85.6-44.4-122.7-13.2-20.6-19.4-44.8-17.9-69.2l.4-5.5-7.3 16.3c-8.1 18-9.9 38-5.3 57.1 7.1 29.3-8.5 59.3-37 71.3l-96.2 40.6c-41.1 17.3-86.6 22.1-130.6 13.7l-333.99999-63.9c-38-7.3-71.6 4.9-106.4 21.5l-137 65.2c-24.8 11.8-60.1 1.7-82-14.6l-9-6.7c-14.8-11.1-22.5-28.7-20.5-46.5l-102.3 25.8c-43.7 10.9-80 41.2-98.6 82.2l157.8 149.80002H1114.8l345.9-188.30002z" fill="#1f1f1f" />
			<path d="M450.90001 889.44348l9 6.7c21.8 16.3 57.2 26.4 82 14.6l137-65.2c34.8-16.6 68.4-28.8 106.4-21.5l333.99999 63.9c44 8.4 89.5 3.6 130.6-13.7l96.2-40.6c28.5-12 44-42 37-71.3-4.6-19.1-2.7-39.1 5.3-57.1l7.3-16.3 3.4-53.8-24.8 57.1c-7.8 18-9.6 38-5.2 57.1 6.8 29.3-8.2 59.3-35.8 71.3l-93.2 40.6c-39.8 17.3-84 22.1-126.6 13.7l-323.79999-63.8c-36.9-7.3-75.1-2.2-108.9 14.3l-132.8 65.2c-24 11.8-52.6 8.9-73.8-7.4l-8.7-6.7c-11.9-9.2-19-22.8-20.1-37.3l-15.2 3.8c-1.7 17.7 5.9 35.4 20.7 46.4z" fill={secondary} />
			<path d="M1434.1116 1030.8165c.1-5.9 8.2866-5.6148 14.146-6.3053l48.9424-5.7677c3.0787-.3628 5.6-2.5 5.7-5.6v-5.8c-.1-3.1-2.6056-5.4141-5.7-5.6l-87.2964-5.24338c-92.4432-5.55251-10.9 3.26507-11-2.63493-.1-6.00002 4.73-4.53318 10.7-5.13231l83.5964-8.3894c3.6815-.36946 6.4-3.4 5.5-7-1.3-5.8-3-11.5-5-17.2l-108.2947-8.3894c-29.6113-2.29394-57.0513 1.58891-76.9513 23.58893l-21.0138 25.9841c-51.7 57.19999-109.3021 72.71059-184.1021 53.81059l-252.58362-58.9836c-32.4-8.2-83.05447-7.04338-110.35447 12.3566l-79.47616 46.146c-65.3 46.4-127.32649 59.4757-204.02649 36.3757l-51.13013-11.7487c8.4 11.8 22.67301 40.1492 36.97301 42.5492l36.27037 7.8217c36.8 5.9 79.34339 6.248 116.64337 6.2783l645.67562.5243c26.8.022 61.8381-13.5216 80.9381-32.4216 18.9-18.7 36.1218-23.1049 62.5106-25.5297l108.4217-9.9624c2.1-5.8 3.9-11.7 5.3-17.7.8-3.6-1.9158-6.663-5.5-7l-44.6181-4.1947c-5.9.3-14.3703 1.1677-14.2703-4.8323z" fill="#f3f3f5" />
			<path d="M1362.2 991.2435c0 5.9 4.8 10.7 10.7 10.7h121.8c-.4-7.1-1.2-14.3-2.5-21.30002H1373c-6-.1-10.8 4.7-10.8 10.60002zM1414.3 1018.8435c-5.9 0-10.7 4.8-10.7 10.7 0 5.9 4.8 10.7 10.7 10.7h77.7c1.3-7 2.2-14.2 2.6-21.3h-80.3z" fill={tertiary} />
			<path d="M679.90001 1061.4435l60.6-43c27.3-19.4 61.6-25.8 94.1-17.6l259.39999 65.8c74.7 18.9 153.8-5 205.6-62.2l12.1-13.4c19.9-22.10002 48.3-34.60002 78-34.60002h104.1c-.6-1.6-1.1-3.2-1.7-4.7l-5.8-14.8c-6.4-16.3-22.1-27.1-39.6-27.1h-92.8c-22.6 0-44.5 7.8-62 22L1220 990.1435c-28.5 23.2-66.1 31.8-101.9 23.5l-254.69999-59.40002c-56.2-13.1-115.3-3.9-164.9 25.6l-99.7 59.30002c-28.8 17.1-63.3 22-95.7 13.4l-295.7-78.10002-8 34.20002 187.6 53.6c12.7 3.6 23.7 11.9 30.8 23.1.5.8 1.1 1.6 1.6 2.4l35.4 10.7c76.8 23 159.8 9.3 225.1-37z" fill={secondary} />
			<path d="M199.50001 1008.6435l10.4-46.80002c1.9-8.7 11-13.9 19.5-11.1l62.3 20.5c11.3 3.7 20.6 11.9 25.8 22.60002l27.2 56.3zM970.00001 1059.2435l-118.5-30.7c-35.8-9.3-73.8-1.9-103.5 20.1l-52.4 38.7c-9.4 7-4.5 22 7.2 22h152.5c40 0 79.6-7.9 116.6-23.2 12.5-5.3 11.2-23.5-1.9-26.9z" fill={tertiary} />
			<path d="M768.00001 1083.3435c-7.4 0-10.5-9.4-4.6-13.8 16.7-12.4 36.5-18.9 57.3-18.9 8.1 0 16.3 1 24.2 3.1l47.4 12.3c8.1 2.1 7.4 13.9-.9 15-11.9 1.6-24 2.3-36.1 2.3z" fill={primary} />
			<path d="M357.50001 1067.9435l-160.3-46.2c-.5 7.8.6 15.4 3 22.5l203.3 56.3c-11.2-15.7-27.4-27.2-46-32.6z" fill={tertiary} />
			<path d="M1342.4 1113.3435c20.8-15.3 45.9-23.5 71.7-23.5h67.7c4.6-8 8.4-16.4 11.5-25h-105.8c-26.7 0-52.3 10.6-71.2 29.5-18.9 18.9-44.5 29.5-71.2 29.5H598.90001c-37.3 0-74.6-3-111.4-8.9l-32.6-5.2c-15.3-2.5-28.8-11.4-37.1-24.5-7.1-11.2-18-19.4-30.8-23.1l-187.6-53.6-.8 3.6c-.7 3.2-1.2 6.3-1.4 9.5l160.3 46.2c18.6 5.4 34.8 16.8 46 32.6l-203.3-56.3c5.9 17.4 19.9 31.6 38.7 37.2l93.9 27.7c78.2 23.1 159.4 34.8 241 34.8H1399.2c25.5 0 49.7-11.2 66.2-30.5z" fill="#1f1f1f" />
			<path d="M1458.6 1111.5435c5.6-6.9 10.5-14.1 14.8-21.7h-67.7c-25.8 0-50.9 8.2-71.7 23.5h123.1l1.5-1.8z" fill={tertiary} />
			<path d="M518.70001 884.44348c-13.3-3.6-21.2-17.4-17.6-30.7 3.6-13.3 17.4-21.2 30.7-17.6 13.3 3.6 21.2 17.4 17.6 30.7-3.6 13.3-17.4 21.2-30.7 17.6z" fill="#f3f3f5" />
			<circle cx="525.20007" cy="860.24347" r="16.1" fill="#1f1f1f" />
			<path d="M527.60001 867.24348c-7.2 3.1-15.5-.2-18.6-7.3l-13.5-31.1c-3.1-7.2.2-15.5 7.3-18.6 7.2-3.1 15.5.2 18.6 7.3l13.5 31.1c3.1 7.2-.2 15.5-7.3 18.6z" fill={primary} />
			<path d="M618.70001 845.54348c-13.7-1.9-23.2-14.6-21.3-28.2 1.9-13.7 14.6-23.2 28.2-21.3 13.7 1.9 23.2 14.6 21.3 28.2-1.9 13.6-14.6 23.2-28.2 21.3z" fill="#f3f3f5" />
			<circle cx="622.09998" cy="820.74347" r="16.1" fill="#1f1f1f" />
			<path d="M625.30001 827.44348c-6.7 4-15.4 1.8-19.4-4.9l-19.6-33c-4-6.7-1.8-15.4 4.9-19.4 6.7-4 15.4-1.8 19.4 4.9l19.6 33c4 6.7 1.8 15.4-4.9 19.4z" fill={primary} />
			<path d="M720.20001 794.14348c-13.8 0-25-11.2-25-25s11.2-25 25-25 25 11.2 25 25-11.2 25-25 25z" fill="#f3f3f5" />
			<circle cx="720.20001" cy="769.14349" r="16.1" fill="#1f1f1f" />
			<path d="M724.30001 775.34348c-6.1 4.9-15 3.9-19.9-2.2l-30.3-38c-4.9-6.1-3.9-15 2.2-19.9 6.1-4.9 15-3.9 19.9 2.2l30.3 38c4.9 6.1 3.9 15-2.2 19.9z" fill={primary} />
			<path d="M811.90001 733.64348c-13.8 0-25-11.2-25-25s11.2-25 25-25 25 11.2 25 25-11.2 25-25 25z" fill="#f3f3f5" />
			<circle cx="811.90002" cy="708.54352" r="16.1" fill="#1f1f1f" />
			<path d="M816.00001 714.74348c-6.1 4.9-15 3.9-19.9-2.2l-36-45.1c-4.9-6.1-3.9-15 2.2-19.9 6.1-4.9 15-3.9 19.9 2.2l36 45.1c4.9 6.1 3.9 15-2.2 19.9z" fill={primary} />
			<path d="M895.20001 672.44348c-13.8 0-25-11.2-25-25s11.2-25 25-25 25 11.2 25 25-11.2 25-25 25z" fill="#f3f3f5" />
			<circle cx="895.20001" cy="647.44348" r="16.1" fill="#1f1f1f" />
			<path d="M899.30001 653.64348c-6.1 4.9-15 3.9-19.9-2.2l-36.3-45.5c-4.9-6.1-3.9-15 2.2-19.9 6.1-4.9 15-3.9 19.9 2.2l36.3 45.5c4.9 6.1 3.9 15-2.2 19.9z" fill={primary} />
			<path d="M981.60001 636.44348c-13.5 2.8-26.8-5.9-29.6-19.4-2.8-13.5 5.9-26.8 19.4-29.5 13.5-2.8 26.8 5.9 29.59999 19.4 2.8 13.5-5.89999 26.8-19.39999 29.5z" fill="#f3f3f5" />
			<circle cx="976.5" cy="612.04352" r="16.1" fill="#1f1f1f" />
			<path d="M981.80001 617.24348c-5 6-13.9 6.8-19.9 1.8l-82.4-68.5c-6-5-6.8-13.9-1.8-19.9 5-6 13.9-6.8 19.9-1.8l82.4 68.5c5.9 4.9 6.8 13.9 1.8 19.9z" fill={primary} />
			<path d="M1060.9 562.24348c-13 4.5-27.3-2.4-31.8-15.4s2.4-27.3 15.4-31.8 27.3 2.4 31.8 15.4c4.6 12.9-2.3 27.2-15.4 31.8z" fill="#f3f3f5" />
			<circle cx="1052.7" cy="538.54352" r="16.1" fill="#1f1f1f" />
			<path d="M1058.6 543.04348c-4.2 6.6-12.9 8.6-19.5 4.4l-137.79999-86.8c-6.6-4.2-8.6-12.9-4.4-19.5 4.2-6.6 12.9-8.6 19.5-4.4l137.79999 86.8c6.6 4.2 8.6 12.9 4.4 19.5zM788.20001 796.74348l90.3 19.8c7.4 1.6 13.1-6.3 9.3-12.8l-35-59.5c-3.2-5.5-10.7-6.7-15.5-2.6l-51.7 44.6c-3.8 3.3-2.3 9.4 2.6 10.5zM877.30001 729.64348l48 79.7c4.4 7.2 11.5 12.4 19.8 14.2l69.79999 15.4c8.2 1.8 14.3-7.4 9.4-14.2l-93.09999-130.2c-4.4-6.2-12.9-7.8-19.3-3.7l-30.1 19.4c-6.5 4.3-8.4 12.8-4.5 19.4zM965.10001 681.94348l122.29999 162c3.8 5.1 9.2 8.8 15.4 10.7 25 7.4 51.4 8.7 77 3.5l17.6-3.5c7-1.4 9.6-10.1 4.4-15.1l-193.4-188.4c-4.1-4-10.39999-4.8-15.29999-1.9l-24.1 13.9c-6.7 3.8-8.5 12.7-3.9 18.8zM1068.4 650.84348l192.2 170.9c3.8 3.4 9.3 4.4 14.1 2.6l47.9-18.1c9.7-3.7 18.1-10.3 23.9-18.8 3.4-5.1 1.8-12-3.5-15l-187.2-107.1c-9.9-5.7-20.6-9.8-31.7-12.3l-50.9-11.5c-5.5-1.3-9 5.5-4.8 9.3zM1271 680.94348l60.3 38.2c5 3.2 11.6-.4 11.6-6.4 0-12.8 3.7-25.4 10.5-36.2l16.4-25.7c4.4-6.9-2.8-15.3-10.3-12l-39.4 17.1c-15 6.5-30.7 11.2-46.9 13.8-5.5 1-6.9 8.3-2.2 11.2z" fill={primary} />
		</svg>
	)
}

export default ShoeThumbnail

function changeHue(rgb, degree) {
	var hsl = rgbToHSL(rgb);
	hsl.h += degree;
	if (hsl.h > 360) {
		hsl.h -= 360;
	}
	else if (hsl.h < 0) {
		hsl.h += 360;
	}
	return hslToRGB(hsl);
}

// exepcts a string and returns an object
function rgbToHSL(rgb) {
	// strip the leading # if it's there
	rgb = rgb.replace(/^\s*#|\s*$/g, '');

	// convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`
	if (rgb.length === 3) {
		rgb = rgb.replace(/(.)/g, '$1$1');
	}

	var r = parseInt(rgb.substr(0, 2), 16) / 255,
		g = parseInt(rgb.substr(2, 2), 16) / 255,
		b = parseInt(rgb.substr(4, 2), 16) / 255,
		cMax = Math.max(r, g, b),
		cMin = Math.min(r, g, b),
		delta = cMax - cMin,
		l = (cMax + cMin) / 2,
		h = 0,
		s = 0;

	if (delta === 0) {
		h = 0;
	}
	else if (cMax === r) {
		h = 60 * (((g - b) / delta) % 6);
	}
	else if (cMax === g) {
		h = 60 * (((b - r) / delta) + 2);
	}
	else {
		h = 60 * (((r - g) / delta) + 4);
	}

	if (delta === 0) {
		s = 0;
	}
	else {
		s = (delta / (1 - Math.abs(2 * l - 1)))
	}

	return {
		h: h,
		s: s,
		l: l
	}
}

// expects an object and returns a string
function hslToRGB(hsl) {
	var h = hsl.h,
		s = hsl.s,
		l = hsl.l,
		c = (1 - Math.abs(2 * l - 1)) * s,
		x = c * (1 - Math.abs((h / 60) % 2 - 1)),
		m = l - c / 2,
		r, g, b;

	if (h < 60) {
		r = c;
		g = x;
		b = 0;
	}
	else if (h < 120) {
		r = x;
		g = c;
		b = 0;
	}
	else if (h < 180) {
		r = 0;
		g = c;
		b = x;
	}
	else if (h < 240) {
		r = 0;
		g = x;
		b = c;
	}
	else if (h < 300) {
		r = x;
		g = 0;
		b = c;
	}
	else {
		r = c;
		g = 0;
		b = x;
	}

	r = normalize_rgb_value(r, m);
	g = normalize_rgb_value(g, m);
	b = normalize_rgb_value(b, m);

	return rgbToHex(r, g, b);
}

function normalize_rgb_value(color, m) {
	color = Math.floor((color + m) * 255);
	if (color < 0) {
		color = 0;
	}
	return color;
}

function rgbToHex(r, g, b) {
	return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
}